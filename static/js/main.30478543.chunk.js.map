{"version":3,"sources":["firebase/config.js","hook1/userStorage.js","Components/ProgressBar.js","Components/Input.js","hook1/useFirestore.js","Components/ImageGrid.js","Components/Modal.js","App.js","index.js"],"names":["firebase","apps","length","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","storage","projectFirestore","firestore","timeStamp","FieldValue","serverTimestamp","UserStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","collectionRef","collection","uploadTask","child","name","put","on","snap","percentage","bytesTransferred","totalBytes","then","getDownloadURL","createdAt","add","ProgressBar","setFile","className","style","width","Input","types","type","onChange","e","selected","target","files","includes","UseFirestore","docs","setDocs","unsub","orderBy","onSnapshot","document","forEach","doc","push","data","id","console","log","ImageGrid","selectImage","map","motion","div","onClick","layout","whileHover","opacity","src","alt","Modal","setSelectImage","App","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.30478543.chunk.js","sourcesContent":["import firebase from \"@firebase/app\";\r\nimport \"@firebase/storage\";\r\nimport \"@firebase/firestore\";\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyAtTE-mvvdKFsdWPXSNrQ7Gvf2UJsYEQ0k\",\r\n  authDomain: \"instafiregram-2cd32.firebaseapp.com\",\r\n  projectId: \"instafiregram-2cd32\",\r\n  storageBucket: \"instafiregram-2cd32.appspot.com\",\r\n  messagingSenderId: \"682670094145\",\r\n  appId: \"1:682670094145:web:d38838b3463d286c9ed3c0\"\r\n};\r\n// Initialize Firebase\r\n//firebase.initializeApp(firebaseConfig);\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(firebaseConfig);\r\n} else {\r\n  firebase.app(); // if already initialized, use that one\r\n}\r\n\r\nconst projectStorage = firebase.storage();\r\nconst projectFirestore = firebase.firestore();\r\nconst timeStamp = firebase.firestore.FieldValue.serverTimestamp;\r\nexport { projectFirestore, projectStorage, timeStamp };\r\n","import { useState, useEffect } from \"react\";\r\nimport {\r\n  projectStorage,\r\n  projectFirestore,\r\n  timeStamp\r\n} from \"../firebase/config\";\r\n// import \"firebase/storage\";\r\nimport firebase from \"@firebase/app\";\r\nconst UserStorage = (file) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [error, setError] = useState(\"\");\r\n  const [url, setUrl] = useState(\" \");\r\n\r\n  useEffect(() => {\r\n    const storageRef = firebase.storage().ref();\r\n    const collectionRef = projectFirestore.collection(\"image\");\r\n    // console.log(collectionRef.add);\r\n    var uploadTask = storageRef.child(\"images/\" + file.name).put(file);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snap) => {\r\n        //console.log(snap);\r\n        const percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n        setProgress(percentage);\r\n      },\r\n      (error) => {\r\n        setError(error);\r\n      }\r\n      // async () => {\r\n      //   // console.log(uploadTask);\r\n      //   const url = await snap.ref.getDownloadURL();\r\n      //   setUrl(url);\r\n      // }\r\n    );\r\n    uploadTask.then((snap) => {\r\n      snap.ref.getDownloadURL().then((url) => {\r\n        const createdAt = timeStamp();\r\n        collectionRef.add({ url, createdAt });\r\n        //console.log(collectionRef);\r\n        //console.log(url, \"hello\");\r\n        setUrl(url);\r\n      });\r\n    });\r\n  }, [file]);\r\n  return { progress, error, url };\r\n};\r\n\r\nexport default UserStorage;\r\n","import React, { useEffect } from \"react\";\r\nimport UserStorage from \"../hook1/userStorage\";\r\nconst ProgressBar = ({ file, setFile }) => {\r\n  const { progress, url } = UserStorage(file);\r\n  //const [didMount, setDidMount] = useState(false);\r\n  //console.log(progress, url);\r\n  useEffect(() => {\r\n    // if (url.length !== 0) {\r\n    //   console.log(url, \"hii\");\r\n    //console.log(\"component mounted 1 compo\");\r\n    // }\r\n    return () => {\r\n      // console.log(\"component unmounted 1 compo\");\r\n      setFile(null);\r\n      //setDidMount(false);\r\n    };\r\n  }, [url, setFile]);\r\n\r\n  return <div className=\"progress-bar\" style={{ width: progress + \"%\" }}></div>;\r\n};\r\nexport default ProgressBar;\r\n","import React, { useState } from \"react\";\r\nimport ProgressBar from \"./ProgressBar\";\r\nconst Input = () => {\r\n  const [file, setFile] = useState(null);\r\n  const types = [\"image/png\", \"image/jpeg\"];\r\n  const [error, setError] = useState(null);\r\n  const onChange = (e) => {\r\n    const selected = e.target.files[0];\r\n    if (selected && types.includes(selected.type)) {\r\n      setFile(selected);\r\n      setError(\" \");\r\n    } else {\r\n      setFile(null);\r\n      setError(\"Please choose the image(png or jpeg)\");\r\n    }\r\n  };\r\n  return (\r\n    <form className=\"input-form\">\r\n      <label className=\"label-form\">\r\n        <input type=\"file\" onChange={onChange} />\r\n        <span>+</span>\r\n      </label>\r\n      <div className=\"output\">\r\n        {error && <div className=\"error\">{error}</div>}\r\n        {file && <div>{file.name}</div>}\r\n        {file && <ProgressBar file={file} setFile={setFile} />}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default Input;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { projectFirestore } from \"../firebase/config\";\r\nconst UseFirestore = (collection) => {\r\n  const [docs, setDocs] = useState([]);\r\n  useEffect(() => {\r\n    const unsub = projectFirestore\r\n      .collection(collection)\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot(\r\n        (snap) => {\r\n          let document = [];\r\n          snap.forEach((doc) => {\r\n            document.push({ ...doc.data(), id: doc.id });\r\n          });\r\n          setDocs(document);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n    return () => unsub();\r\n  }, [collection]);\r\n  return { docs };\r\n};\r\nexport default UseFirestore;\r\n","import React from \"react\";\r\nimport UseFirestore from \"../hook1/useFirestore\";\r\nimport { motion } from \"framer-motion\";\r\nconst ImageGrid = ({ selectImage }) => {\r\n  const { docs } = UseFirestore(\"image\");\r\n  //console.log(docs);\r\n  return (\r\n    <div className=\"img-grid\">\r\n      {docs.map((doc) => (\r\n        <motion.div\r\n          className=\"img-wrap\"\r\n          key={doc.id}\r\n          onClick={() => selectImage(doc.url)}\r\n          layout\r\n          whileHover={{ opacity: 1 }}\r\n        >\r\n          <img src={doc.url} alt=\"images\" />\r\n        </motion.div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default ImageGrid;\r\n","import React from \"react\";\r\nconst Modal = ({ selectImage, setSelectImage }) => {\r\n  const handleChange = (e) => {\r\n    setSelectImage(null);\r\n  };\r\n  return (\r\n    <div className=\"backdrop\" onClick={handleChange}>\r\n      <img src={selectImage} alt=\"enlarged-pic\" />\r\n    </div>\r\n  );\r\n};\r\nexport default Modal;\r\n","import \"./styles.css\";\nimport React, { useState } from \"react\";\nimport Input from \"./Components/Input\";\nimport ImageGrid from \"./Components/ImageGrid\";\nimport Modal from \"./Components/Modal\";\nexport default function App() {\n  const [selectImage, setSelectImage] = useState(null);\n  return (\n    <div className=\"app\">\n      <h1>Your Gallery</h1>\n      <Input />\n      <ImageGrid selectImage={setSelectImage} />\n      {selectImage && (\n        <Modal selectImage={selectImage} setSelectImage={setSelectImage} />\n      )}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}